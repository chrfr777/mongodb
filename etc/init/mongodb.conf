# Ubuntu upstart file at /etc/init/mongodb.conf

limit nofile 20000 20000

kill timeout 300 # wait 300s between SIGTERM and SIGKILL.

pre-start script
  # we do this in monit.conf as well, but we can't wait for that
  curl="curl --retry 3 --silent --show-error --fail"
  hostname_public=$($curl http://169.254.169.254/latest/meta-data/public-hostname)
  echo "host name = ["$hostname_public"]"
  hostname $hostname_public
  echo $hostname_public > /etc/hostname

  mkdir -p /var/mongodb/run
  chown -R mongodb.mongodb /var/mongodb/run
  /root/create_mongodb_volume.sh

  mkdir -p /var/mongodb/lib /var/run/mongodb /var/mongodb/log /mnt/mongodb/log
  chown -R mongodb.mongodb /var/run/mongodb /var/mongodb /mnt/mongodb/log
end script

post-start script
  # we might be initial member of a new replica set
  new=$(/root/new_set.sh)

  if [ "x$new" = "xyes" ]; then
	  /usr/bin/mongo --eval "rs.initiate()"
  else
	  # schedule adding this host, for the (new) primary
	  task="\"rs.add('`hostname`:27017')\""
	  /root/add_task.sh "${task}"
  fi
end script

pre-stop script
  /usr/bin/mongo --eval "if( rs.isMaster()) { rs.stepDown()}"
end script

post-stop script
  # schedule removal of this host, for the new primary
  task="\"rs.remove('`hostname`:27017')\""
  /root/add_task.sh "${task}"
end script

start on runlevel [2345]
stop on runlevel [06]

script
  curl="curl --retry 3 --silent --show-error --fail"
  set_name=$($curl http://169.254.169.254/latest/user-data | grep '"name"' | sed 's/.*\:[ \t]*"\{0,1\}\([^,"]*\)"\{0,1\},\{0,1\}/\1/')


  ENABLE_MONGODB="yes"
  if [ -f /etc/default/mongodb ]; then . /etc/default/mongodb; fi
  if [ "x$ENABLE_MONGODB" = "xyes" ]; then exec start-stop-daemon --start --make-pidfile --pidfile /var/run/mongodb/mongodb.pid --chuid mongodb --exec  /usr/bin/mongod -- --rest --oplogSize 5120 --config /etc/mongodb.conf --replSet $set_name; fi
end script
